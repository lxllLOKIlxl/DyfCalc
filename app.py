import matplotlib.pyplot as plt
import numpy as np
import streamlit as st
import sympy as sp
import firebase_admin
from firebase_admin import credentials, db
import json
import time  # –î–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —á–∞—Å–æ–≤–∏–º–∏ –º—ñ—Ç–∫–∞–º–∏

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ –ø–µ—Ä–µ–∫–ª–∞–¥—É
def load_language(lang):
    with open(f"translations/{lang}.json", "r", encoding="utf-8") as file:
        return json.load(file)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Firebase –∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é
if not firebase_admin._apps:
    cred = credentials.Certificate({
        "type": st.secrets["firebase"]["type"],
        "project_id": st.secrets["firebase"]["project_id"],
        "private_key_id": st.secrets["firebase"]["private_key_id"],
        "private_key": st.secrets["firebase"]["private_key"].replace("\\n", "\n"),
        "client_email": st.secrets["firebase"]["client_email"],
        "client_id": st.secrets["firebase"]["client_id"],
        "auth_uri": st.secrets["firebase"]["auth_uri"],
        "token_uri": st.secrets["firebase"]["token_uri"],
        "auth_provider_x509_cert_url": st.secrets["firebase"]["auth_provider_x509_cert_url"],
        "client_x509_cert_url": st.secrets["firebase"]["client_x509_cert_url"]
    })
    firebase_admin.initialize_app(cred, {
        'databaseURL': st.secrets["firebase"]["databaseURL"]
    })

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ Firebase
def send_message():
    if "user_message" in st.session_state and "user_name" in st.session_state:
        user = st.session_state["user_name"]
        text = st.session_state["user_message"]
        try:
            ref = db.reference('messages')
            new_message = {
                "user": user,
                "text": text,
                "timestamp": int(time.time())  # –ß–∞—Å —É UNIX-—Ñ–æ—Ä–º–∞—Ç—ñ
            }
            ref.push(new_message)
            st.success("–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!")
            st.session_state["user_message"] = ""  # –û—á–∏—â–µ–Ω–Ω—è –ø–æ–ª—è –ø—ñ—Å–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
        except Exception as e:
            st.error(f"–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
    else:
        st.warning("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —ñ–º'—è —Ç–∞ —Ç–µ–∫—Å—Ç!")

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —ñ–∑ Firebase
def get_messages():
    try:
        current_time = int(time.time())
        cutoff_time = current_time - 40  # –í–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —Å—Ç–∞—Ä—à–µ 40 —Å–µ–∫—É–Ω–¥
        ref = db.reference('messages')

        # –í–∏–¥–∞–ª–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
        old_messages = ref.order_by_child('timestamp').end_at(cutoff_time).get()
        if old_messages:
            for key in old_messages:
                ref.child(key).delete()

        # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–∫—Ç—É–∞–ª—å–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
        messages = ref.order_by_child('timestamp').start_at(cutoff_time).get()
        if messages:
            return [(msg["user"], msg["text"]) for msg in messages.values()]
        return []
    except Exception as e:
        st.error(f"–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö: {e}")
        return []

# –õ—ñ—á–∏–ª—å–Ω–∏–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
if 'user_count' not in st.session_state:
    st.session_state['user_count'] = 1
st.session_state['user_count'] += 1

# –í–∏–±—ñ—Ä –º–æ–≤–∏
with st.sidebar:
    # –†–∞–¥—ñ–æ-–∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤–∏–±–æ—Ä—É –º–æ–≤–∏ –±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞
    lang_choice = st.radio("", ["uk", "en"], key="language_radio")  # –¢—ñ–ª—å–∫–∏ –∫–Ω–æ–ø–∫–∏

    # –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–µ—Ä–µ–∫–ª–∞–¥—É –ø—ñ—Å–ª—è –≤–∏–±–æ—Ä—É –º–æ–≤–∏
    translations = load_language(lang_choice)

    # –°—Ç–∏–ª—ñ–∑–æ–≤–∞–Ω–∞ —Å–µ–∫—Ü—ñ—è –¥–ª—è "–ú–æ–≤–∞ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É"
    st.markdown(
        f"""
        <div style="background-color: rgba(240, 240, 240, 0.5); padding: 6px 10px; border-radius: 14px; border: 1px solid rgba(200, 200, 200, 0.5); margin-bottom: 10px; text-align: center;">
            <h4 style="margin: 0; color: #000; font-family: Arial, sans-serif;">üåç {translations['interface_language']}</h4>
        </div>
        <hr style="border: none; border-top: 1px solid rgba(180, 180, 180, 0.8); margin: 8px 0;">
        """,
        unsafe_allow_html=True
    )

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ —ñ–∑ —Å—Ç–∏–ª–µ–º
st.markdown(f"<h1 style='text-align: center; color: blue;'>üî¢ {translations['greeting']} DyfCalc</h1>", unsafe_allow_html=True)
st.markdown(f"<h3 style='text-align: center; color: gray;'>{translations['calculation_prompt']}</h3>", unsafe_allow_html=True)
st.markdown("---")

# –ë–æ–∫–æ–≤–∞ –ø–∞–Ω–µ–ª—å —ñ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —Ç–∞ —á–∞—Ç–æ–º
with st.sidebar:
    # –õ—ñ—á–∏–ª—å–Ω–∏–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —ñ–∑ –µ–º–æ–¥–∑—ñ üë•
    st.markdown(
        f"""
        <div style="background-color: rgba(230, 245, 230, 0.8); padding: 8px; border-radius: 12px; border: 1px solid rgba(200, 200, 200, 0.6); margin-bottom: 10px; text-align: center;">
            <h4 style="margin: 0; color: #333; font-family: Arial, sans-serif;">üë• {translations['online_users']}</h4>
            <p style="margin: 0; font-size: 16px; color: #000; font-weight: bold;">üë§ {st.session_state['user_count']} {translations['online_count']}</p>
        </div>
        <hr style="border: none; border-top: 1px solid rgba(180, 180, 180, 0.8); margin: 8px 0;">
        """,
        unsafe_allow_html=True
    )

    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
    st.header(f"üîß {translations['settings_title']}")  # –î–∏–Ω–∞–º—ñ—á–Ω–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫

    # –î–∏–Ω–∞–º—ñ—á–Ω—ñ —Ä–∞–¥—ñ–æ-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ–ø–µ—Ä–∞—Ü—ñ–π
    operation = st.radio(
        translations["operation_prompt"], 
        [translations["integration"], translations["differentiation"]],  # –õ–æ–∫–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
        key="operation_radio"
    )

    # –î–∏–Ω–∞–º—ñ—á–Ω—ñ —Ä–∞–¥—ñ–æ-–∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ç–µ–º–∏
    theme = st.radio(
        translations["theme_prompt"], 
        [translations["theme_light"], translations["theme_dark"]],  # –õ–æ–∫–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
        key="theme_radio"
    )

    st.markdown("---")

    # –ß–∞—Ç —É –±–æ–∫–æ–≤—ñ–π –ø–∞–Ω–µ–ª—ñ
with st.sidebar:
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç—É
    st.header(f"üí¨ {translations['online_chat']}")

    # –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    messages = get_messages()
    if messages:  # –Ø–∫—â–æ —î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        for user, text in messages:
            st.write(f"**{user}:** {text}")
    else:
        st.write("–ù–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å.")  # –ö–æ—Ä–µ–∫—Ç–Ω–∏–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ—Ä–æ–∂–Ω—å–æ–≥–æ —á–∞—Ç—É

    # –ü–æ–ª–µ –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è —ñ–º–µ–Ω—ñ
    user_name = st.text_input(
        translations["name_prompt"], 
        key="user_name"
    )

    # –¢–∏–º—á–∞—Å–æ–≤–∞ –∑–º—ñ–Ω–Ω–∞ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –≤–≤–µ–¥–µ–Ω–∏–º —Ç–µ–∫—Å—Ç–æ–º
    user_message = st.text_input(
        translations["message_prompt"], 
        key="user_message",
        value=""  # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø–æ–ª—è —è–∫ –ø–æ—Ä–æ–∂–Ω—å–æ–≥–æ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∞
    )

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    if st.button(translations["send_button_chat"]):  # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∫–ª—é—á–∞ "–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏"
        if not user_name.strip():  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –≤–≤–µ–¥–µ–Ω–æ —ñ–º'—è
            st.warning(translations["name_warning"])
        elif not user_message.strip():  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            st.warning(translations["message_warning"])
        else:
            send_message()  # –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            st.text_input(  # –û–Ω–æ–≤–ª—é—î–º–æ –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥—É
                translations["message_prompt"], 
                key="user_message",
                value=""  # –û—á–∏—â–µ–Ω–Ω—è –ø—ñ—Å–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
            )

    # –î–æ–¥–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∞–≤—Ç–æ—Ä–∞
    st.markdown("---")
    st.markdown(
        f"""
        <div style="text-align: center; color: gray;">
        {translations['project_by']}<br>
        <b>–°—Ç—É–¥–µ–Ω—Ç 1 –∫—É—Ä—Å—É –Ü–ü–ó-24-1-if</b><br>
        <b>–®–∞–±–ª—ñ–Ω—Å—å–∫–∏–π –°.–Ü.</b>
        </div>
        """, unsafe_allow_html=True
    )

# –í–≤–µ–¥–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó
st.markdown(
    f"""
    <div style="border: 1px solid #ccc; padding: 10px; border-radius: 8px; box-shadow: 2px 2px 5px rgba(0,0,0,0.1);">
    <h4>üßÆ {translations['calculation_prompt']}</h4>
    </div>
    """,
    unsafe_allow_html=True
)
user_function = st.text_input(translations["input_example"], placeholder="x**2 - 4*x + y + z")

# –ü–æ–±—É–¥–æ–≤–∞ –≥—Ä–∞—Ñ—ñ–∫–∞ —Ñ—É–Ω–∫—Ü—ñ—ó –∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é
if user_function:
    try:
        x, y, z = sp.symbols('x y z')
        function = sp.sympify(user_function)

        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥—ñ–ª–µ–Ω–Ω—è –Ω–∞ –Ω—É–ª—å
        if sp.simplify(function).has(sp.zoo) or sp.simplify(function).has(sp.oo):
            raise ValueError("–§—É–Ω–∫—Ü—ñ—è –º–∞—î –Ω–µ—Å–∫—ñ–Ω—á–µ–Ω–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è!")

        # –ü—ñ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω—å –¥–ª—è –∑–º—ñ–Ω–Ω–∏—Ö y —ñ z
        substitutions = {var: 1 for var in [y, z] if var in function.free_symbols}
        function = function.subs(substitutions)

        # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —á–∏—Å–ª–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö
        func_np = sp.lambdify(x, function, "numpy")
        x_vals = np.linspace(-10, 10, 500)
        y_vals = func_np(x_vals)

        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–æ–∑–º—ñ—Ä–Ω–æ—Å—Ç—ñ –º–∞—Å–∏–≤—ñ–≤ x —Ç–∞ y
        if len(x_vals) != len(y_vals):
            raise ValueError("–û–ø–∞, –≤–∏–±–∞—á—Ç–µ, –≤–∏ –Ω–∞–ø–µ–≤–Ω–µ –ø–æ–º–∏–ª–∏–ª–∏—Å—è —É —Ñ—É–Ω–∫—Ü—ñ—ó! –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —ó—ó —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∞–±–æ –ª–æ–≥—ñ–∫—É.")

        # –ó–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –∫–æ—Ä–µ–Ω—ñ–≤ —Ñ—É–Ω–∫—Ü—ñ—ó
        roots = sp.solve(function, x)
        roots_np = [float(root.evalf()) for root in roots if sp.im(root) == 0]

        # –ü–æ–±—É–¥–æ–≤–∞ –≥—Ä–∞—Ñ—ñ–∫–∞
        if st.checkbox(translations["plot_function"]):
            fig, ax = plt.subplots(figsize=(8, 5))
            ax.plot(x_vals, y_vals, label=f"f(x) = {user_function}", color="blue")

            # –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ—á–æ–∫ –ø–µ—Ä–µ—Ç–∏–Ω—É
            for root in roots_np:
                ax.scatter(root, 0, color="red", s=50, label=f"–¢–æ—á–∫–∞ –ø–µ—Ä–µ—Ç–∏–Ω—É: {root:.2f}")
                ax.annotate(
                    f"{root:.2f}",
                    (root, 0),
                    textcoords="offset points",
                    xytext=(0, 10),
                    ha="center",
                    fontsize=10,
                    bbox=dict(boxstyle="round,pad=0.3", edgecolor="red", facecolor="lightyellow")
                )

            ax.set_title("–ì—Ä–∞—Ñ—ñ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó", fontsize=16)
            ax.set_xlabel("x", fontsize=14)
            ax.set_ylabel("f(x)", fontsize=14)
            ax.legend(loc="upper left")
            ax.grid(True)

            st.pyplot(fig)

    except ValueError as ve:
        st.error(f"–ü–æ–º–∏–ª–∫–∞: {ve}")
    except Exception as e:
        st.error(f"–û–ø–∞, –≤–∏–±–∞—á—Ç–µ, —Å—Ç–∞–ª–∞—Å—è –Ω–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ–≥—Ä–∞–ª—É –∞–±–æ –ø–æ—Ö—ñ–¥–Ω–æ—ó
if st.button("üîç –û–±—á–∏—Å–ª–∏—Ç–∏"):
    try:
        if operation == "–Ü–Ω—Ç–µ–≥—Ä—É–≤–∞–Ω–Ω—è":
            result = sp.integrate(function, x)
            st.success(f"**–Ü–Ω—Ç–µ–≥—Ä–∞–ª:** {result}")
        elif operation == "–î–∏—Ñ–µ—Ä–µ–Ω—Ü—ñ—é–≤–∞–Ω–Ω—è":
            result = sp.diff(function, x)
            st.success(f"**–ü–æ—Ö—ñ–¥–Ω–∞:** {result}")
    except Exception as e:
        st.error(f"–û–ø–∞, –≤–∏–±–∞—á—Ç–µ, —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –æ–±—á–∏—Å–ª–µ–Ω–Ω—è. –ú–æ–∂–ª–∏–≤–æ, –≤–∞—à–∞ —Ñ—É–Ω–∫—Ü—ñ—è –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞: {e}")

# –î–æ–¥–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∏–ª—å
st.markdown(
    """
    <style>
    body {
        background: linear-gradient(to bottom, #f0f2f6, #e6ecf3);
    }
    .stButton>button {
        background-color: #007BFF; /* –°–∏–Ω—ñ–π –∫–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ */
        color: white;
        border: none;
        padding: 6px 12px; /* –†–æ–∑–º—ñ—Ä –∫–Ω–æ–ø–∫–∏ */
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 14px; /* –†–æ–∑–º—ñ—Ä —Ç–µ–∫—Å—Ç—É */
        margin: 4px 2px;
        border-radius: 8px;
        transition-duration: 0.4s;
    }
    .stButton>button:hover {
        background-color: #0056b3; /* –¢–µ–º–Ω—ñ—à–µ —Å–∏–Ω—ñ–π –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ */
        color: white;
    }
    </style>
    """,
    unsafe_allow_html=True
)
