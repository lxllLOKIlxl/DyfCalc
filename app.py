import streamlit as st
import sympy as sp
import numpy as np
import plotly.graph_objs as go

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ —ñ–∑ —ñ–∫–æ–Ω–∫–æ—é
st.markdown("<h1 style='text-align: center;'>üî¢ DyfCalc</h1>", unsafe_allow_html=True)
st.markdown("<h3 style='text-align: center; color: gray;'>–Ü–Ω—Ç–µ–≥—Ä—É–≤–∞–Ω–Ω—è —Ç–∞ –î–∏—Ñ–µ—Ä–µ–Ω—Ü—ñ—é–≤–∞–Ω–Ω—è –§—É–Ω–∫—Ü—ñ–π</h3>", unsafe_allow_html=True)
st.markdown("---")

# –ë—ñ—á–Ω–µ –º–µ–Ω—é —ñ–∑ —ñ–∫–æ–Ω–∫–∞–º–∏
st.sidebar.markdown("## üõ†Ô∏è –û–ø—Ü—ñ—ó:")
operation = st.sidebar.selectbox("–û–±–µ—Ä—ñ—Ç—å –æ–ø–µ—Ä–∞—Ü—ñ—é:", ["–Ü–Ω—Ç–µ–≥—Ä—É–≤–∞–Ω–Ω—è", "–î–∏—Ñ–µ—Ä–µ–Ω—Ü—ñ—é–≤–∞–Ω–Ω—è"])
st.sidebar.markdown("---")
st.sidebar.markdown("### üé® –¢–µ–º–∏:")
theme = st.sidebar.radio("–û–±–µ—Ä—ñ—Ç—å —Ç–µ–º—É:", ["–°–≤—ñ—Ç–ª–∞", "–¢–µ–º–Ω–∞"])

# –í–≤–µ–¥–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó
st.markdown("### üßÆ –í–≤–µ–¥—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è:")
user_function = st.text_input("–í–≤–µ–¥—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é —Ç—É—Ç, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, x**2 - 4*x + 3", placeholder="x**2 - 4*x + 3")

# –ü–æ–∫—Ä–∞—â–µ–Ω–Ω—è: –î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫
if st.button("–ü–æ–∫–∞–∑–∞—Ç–∏ –≥—Ä–∞—Ñ—ñ–∫") and user_function:
    x = sp.symbols('x')
    function = sp.sympify(user_function)
    func_np = sp.lambdify(x, function, "numpy")
    x_vals = np.linspace(-10, 10, 500)
    y_vals = func_np(x_vals)

    # –¢–æ—á–∫–∏ –ø–µ—Ä–µ—Ç–∏–Ω—É
    roots = sp.solve(function, x)
    roots_np = [float(root.evalf()) for root in roots if sp.im(root) == 0]

    # –ü–æ–±—É–¥–æ–≤–∞ –≥—Ä–∞—Ñ—ñ–∫–∞ –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º —Ç–µ–º–∏
    fig = go.Figure()
    fig.add_trace(go.Scatter(x=x_vals, y=y_vals, mode='lines', name=f"f(x) = {user_function}"))

    for root in roots_np:
        fig.add_trace(go.Scatter(x=[root], y=[func_np(root)], mode='markers+text',
                                 marker=dict(size=10, color='red'),
                                 text=f"Root: {root:.2f}",
                                 textposition="top center",
                                 name="–¢–æ—á–∫–∞ –ø–µ—Ä–µ—Ç–∏–Ω—É"))

    fig.update_layout(
        title="–ì—Ä–∞—Ñ—ñ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó –∑ —Ç–æ—á–∫–∞–º–∏ –ø–µ—Ä–µ—Ç–∏–Ω—É",
        xaxis_title="x",
        yaxis_title="f(x)",
        template="plotly_dark" if theme == "–¢–µ–º–Ω–∞" else "plotly_white"
    )

    st.plotly_chart(fig)

# –í–∏–∫–æ–Ω–∞–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ—ó
if user_function and st.button("üîç –û–±—á–∏—Å–ª–∏—Ç–∏"):
    x = sp.symbols('x')
    function = sp.sympify(user_function)
    if operation == "–Ü–Ω—Ç–µ–≥—Ä—É–≤–∞–Ω–Ω—è":
        result = sp.integrate(function, x)
        st.success(f"–Ü–Ω—Ç–µ–≥—Ä–∞–ª: {result}")
    elif operation == "–î–∏—Ñ–µ—Ä–µ–Ω—Ü—ñ—é–≤–∞–Ω–Ω—è":
        result = sp.diff(function, x)
        st.success(f"–ü–æ—Ö—ñ–¥–Ω–∞: {result}")
