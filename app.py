import matplotlib.pyplot as plt
import numpy as np
import streamlit as st
import sympy as sp

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ —ñ–∑ —Å—Ç–∏–ª–µ–º
st.markdown("<h1 style='text-align: center; color: blue;'>DyfCalc</h1>", unsafe_allow_html=True)
st.markdown("<h3 style='text-align: center; color: gray;'>–Ü–Ω—Ç–µ–≥—Ä—É–≤–∞–Ω–Ω—è —Ç–∞ –î–∏—Ñ–µ—Ä–µ–Ω—Ü—ñ—é–≤–∞–Ω–Ω—è –§—É–Ω–∫—Ü—ñ–π</h3>", unsafe_allow_html=True)
st.markdown("---")

# –ó–º—ñ–Ω–Ω–∞ –¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏—á–Ω–∏—Ö –æ–±—á–∏—Å–ª–µ–Ω—å
x = sp.symbols('x')

# –ë–æ–∫–æ–≤–∞ –ø–∞–Ω–µ–ª—å –¥–ª—è –≤–∏–±–æ—Ä—É –æ–ø–µ—Ä–∞—Ü—ñ—ó
with st.sidebar:
    st.header("üîß –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è")
    operation = st.radio("–û–±–µ—Ä—ñ—Ç—å –æ–ø–µ—Ä–∞—Ü—ñ—é:", ["–Ü–Ω—Ç–µ–≥—Ä—É–≤–∞–Ω–Ω—è", "–î–∏—Ñ–µ—Ä–µ–Ω—Ü—ñ—é–≤–∞–Ω–Ω—è"])

# –í–≤–µ–¥–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó
st.markdown("### üßÆ –í–≤–µ–¥—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è:")
user_function = st.text_input("–ù–∞–ø—Ä–∏–∫–ª–∞–¥, x**2 - 4*x + 3", placeholder="x**2 - 4*x + 3")

# –ü–æ–±—É–¥–æ–≤–∞ –≥—Ä–∞—Ñ—ñ–∫–∞ —Ñ—É–Ω–∫—Ü—ñ—ó –∑ —Ç–æ—á–∫–∞–º–∏ –ø–µ—Ä–µ—Ç–∏–Ω—É
if user_function:
    try:
        function = sp.sympify(user_function)
        if st.checkbox("üìä –ü–æ–∫–∞–∑–∞—Ç–∏ –≥—Ä–∞—Ñ—ñ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó"):
            # –ü–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó –Ω–∞ NumPy
            func_np = sp.lambdify(x, function, 'numpy')
            x_vals = np.linspace(-10, 10, 500)  # –í—ñ—Å—å X
            y_vals = func_np(x_vals)  # –ó–Ω–∞—á–µ–Ω–Ω—è Y

            # –ó–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –∫–æ—Ä–µ–Ω—ñ–≤ —Ñ—É–Ω–∫—Ü—ñ—ó
            roots = sp.solve(function, x)
            roots_np = [float(root.evalf()) for root in roots if sp.im(root) == 0]

            # –ü–æ–±—É–¥–æ–≤–∞ –≥—Ä–∞—Ñ—ñ–∫–∞
            fig, ax = plt.subplots()
            ax.plot(x_vals, y_vals, label=f"f(x) = {user_function}", color="blue")

            # –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ—á–æ–∫ –ø–µ—Ä–µ—Ç–∏–Ω—É
            for root in roots_np:
                ax.scatter(root, 0, color="red", label=f"Root: {root:.2f}")  # –¢–æ—á–∫–∏ –Ω–∞ –≥—Ä–∞—Ñ—ñ–∫—É

            ax.set_title("–ì—Ä–∞—Ñ—ñ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó –∑ —Ç–æ—á–∫–∞–º–∏ –ø–µ—Ä–µ—Ç–∏–Ω—É", fontsize=14, color="black")
            ax.set_xlabel("x", fontsize=12)
            ax.set_ylabel("f(x)", fontsize=12)
            ax.legend(loc="best")
            ax.grid(True, linestyle="--", alpha=0.7)

            st.pyplot(fig)

    except Exception as e:
        st.error(f"–ü–æ–º–∏–ª–∫–∞ –ø–æ–±—É–¥–æ–≤–∏ –≥—Ä–∞—Ñ—ñ–∫–∞: {e}")

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω—å
if user_function and st.button("üîç –û–±—á–∏—Å–ª–∏—Ç–∏"):
    try:
        if operation == "–Ü–Ω—Ç–µ–≥—Ä—É–≤–∞–Ω–Ω—è":
            result = sp.integrate(function, x)
            st.success(f"–Ü–Ω—Ç–µ–≥—Ä–∞–ª: {result}")
        elif operation == "–î–∏—Ñ–µ—Ä–µ–Ω—Ü—ñ—é–≤–∞–Ω–Ω—è":
            result = sp.diff(function, x)
            st.success(f"–ü–æ—Ö—ñ–¥–Ω–∞: {result}")
        else:
            st.error("–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞ –æ–ø–µ—Ä–∞—Ü—ñ—è.")
    except Exception as e:
        st.error(f"–ü–æ–º–∏–ª–∫–∞ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è: {e}")

# –î–æ–¥–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∏–ª—å –¥–ª—è —Ñ–æ–Ω—É
st.markdown(
    """
    <style>
    body {
        background-color: #f0f2f6;
    }
    </style>
    """,
    unsafe_allow_html=True
)

