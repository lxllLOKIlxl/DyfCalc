import matplotlib.pyplot as plt
import numpy as np
import streamlit as st
import sympy as sp

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ —ñ–∑ —ñ–∫–æ–Ω–∫–æ—é —Ç–∞ —Å—Ç–∏–ª–µ–º
st.markdown("<h1 style='text-align: center; color: blue;'>üî¢ DyfCalc</h1>", unsafe_allow_html=True)
st.markdown("<h3 style='text-align: center; color: gray;'>–Ü–Ω—Ç–µ–≥—Ä—É–≤–∞–Ω–Ω—è —Ç–∞ –î–∏—Ñ–µ—Ä–µ–Ω—Ü—ñ—é–≤–∞–Ω–Ω—è –§—É–Ω–∫—Ü—ñ–π</h3>", unsafe_allow_html=True)
st.markdown("---")

# –ë–æ–∫–æ–≤–∞ –ø–∞–Ω–µ–ª—å —ñ–∑ —Å–µ–∫—Ü—ñ—è–º–∏ –º–µ–Ω—é
with st.sidebar:
    st.header("üîß –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è")
    operation = st.radio("–û–±–µ—Ä—ñ—Ç—å –æ–ø–µ—Ä–∞—Ü—ñ—é:", ["üßÆ –Ü–Ω—Ç–µ–≥—Ä—É–≤–∞–Ω–Ω—è", "‚úÇÔ∏è –î–∏—Ñ–µ—Ä–µ–Ω—Ü—ñ—é–≤–∞–Ω–Ω—è"])
    st.markdown("---")
    st.header("üé® –û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è")
    theme = st.radio("–û–±–µ—Ä—ñ—Ç—å —Ç–µ–º—É:", ["–°–≤—ñ—Ç–ª–∞", "–¢–µ–º–Ω–∞"])
    st.markdown("---")

# –í–≤–µ–¥–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó –∑ —Ä–∞–º–∫–æ—é —Ç–∞ —Ç—ñ–Ω—è–º–∏
st.markdown(
    """
    <div style="border: 1px solid #ccc; padding: 10px; border-radius: 8px; box-shadow: 2px 2px 5px rgba(0,0,0,0.1);">
    <h4>üßÆ –í–≤–µ–¥—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è:</h4>
    </div>
    """,
    unsafe_allow_html=True
)
user_function = st.text_input("–ù–∞–ø—Ä–∏–∫–ª–∞–¥, x**2 - 4*x + 3", placeholder="x**2 - 4*x + 3")

# –ü–æ–±—É–¥–æ–≤–∞ –≥—Ä–∞—Ñ—ñ–∫–∞ —Ñ—É–Ω–∫—Ü—ñ—ó –∑ —Ç–æ—á–∫–∞–º–∏ –ø–µ—Ä–µ—Ç–∏–Ω—É —Ç–∞ –∞–Ω—ñ–º–∞—Ü—ñ—î—é
if user_function:
    try:
        function = sp.sympify(user_function)
        if st.checkbox("üìä –ü–æ–∫–∞–∑–∞—Ç–∏ –≥—Ä–∞—Ñ—ñ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó"):
            func_np = sp.lambdify(x, function, 'numpy')
            x_vals = np.linspace(-10, 10, 500)
            y_vals = func_np(x_vals)

            # –ó–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è —Ç–æ—á–æ–∫ –ø–µ—Ä–µ—Ç–∏–Ω—É
            roots = sp.solve(function, x)
            roots_np = [float(root.evalf()) for root in roots if sp.im(root) == 0]

            # –ü–æ–±—É–¥–æ–≤–∞ –≥—Ä–∞—Ñ—ñ–∫–∞
            fig, ax = plt.subplots()
            ax.plot(x_vals, y_vals, label=f"f(x) = {user_function}", color="blue")

            # –ê–Ω—ñ–º–∞—Ü—ñ—è —Ç–æ—á–æ–∫ –ø–µ—Ä–µ—Ç–∏–Ω—É
            for root in roots_np:
                ax.scatter(root, 0, color="red", label=f"–¢–æ—á–∫–∞ –ø–µ—Ä–µ—Ç–∏–Ω—É: {root:.2f}")
                ax.annotate(
                    f"{root:.2f}",
                    (root, 0),
                    textcoords="offset points",
                    xytext=(0, 10),
                    ha="center",
                    fontsize=10,
                    bbox=dict(boxstyle="round,pad=0.3", edgecolor="blue", facecolor="lightyellow")
                )

            ax.set_title("–ì—Ä–∞—Ñ—ñ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó –∑ —Ç–æ—á–∫–∞–º–∏ –ø–µ—Ä–µ—Ç–∏–Ω—É", fontsize=14, color="black")
            ax.set_xlabel("–í—ñ—Å—å X", fontsize=12)
            ax.set_ylabel("–í—ñ—Å—å Y", fontsize=12)
            ax.legend(loc="best")
            ax.grid(True, linestyle="--", alpha=0.7)

            st.pyplot(fig)
    except Exception as e:
        st.error(f"–ü–æ–º–∏–ª–∫–∞ –ø–æ–±—É–¥–æ–≤–∏ –≥—Ä–∞—Ñ—ñ–∫–∞: {e}")

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω—å
if user_function and st.button("üîç –û–±—á–∏—Å–ª–∏—Ç–∏"):
    try:
        if "–Ü–Ω—Ç–µ–≥—Ä—É–≤–∞–Ω–Ω—è" in operation:
            result = sp.integrate(function, x)
            st.success(f"–Ü–Ω—Ç–µ–≥—Ä–∞–ª: {result}")
        elif "–î–∏—Ñ–µ—Ä–µ–Ω—Ü—ñ—é–≤–∞–Ω–Ω—è" in operation:
            result = sp.diff(function, x)
            st.success(f"–ü–æ—Ö—ñ–¥–Ω–∞: {result}")
        else:
            st.error("–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞ –æ–ø–µ—Ä–∞—Ü—ñ—è.")
    except Exception as e:
        st.error(f"–ü–æ–º–∏–ª–∫–∞ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è: {e}")

# –§–æ–Ω–æ–≤–∞ —Å—Ç–∏–ª—ñ–∑–∞—Ü—ñ—è
st.markdown(
    """
    <style>
    body {
        background: linear-gradient(to bottom, #f0f2f6, #e6ecf3);
    }
    .stButton>button {
        background-color: #4CAF50;
        color: white;
        border: none;
        padding: 10px 24px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin: 4px 2px;
        border-radius: 12px;
        transition-duration: 0.4s;
    }
    .stButton>button:hover {
        background-color: white;
        color: black;
        border: 2px solid #4CAF50;
    }
    </style>
    """,
    unsafe_allow_html=True
)
