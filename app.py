import matplotlib.pyplot as plt
import numpy as np
import streamlit as st
import sympy as sp
from firebase_admin import credentials, db, initialize_app

# Firebase –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
if not st.session_state.get("firebase_initialized"):
    cred = credentials.Certificate("firebase_credentials.json")  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —à–ª—è—Ö –¥–æ –≤–∞—à–æ–≥–æ –∫–ª—é—á–∞ Firebase
    initialize_app(cred, {"databaseURL": "https://your-database-name.firebaseio.com/"})
    st.session_state["firebase_initialized"] = True

# –î–æ—Å—Ç—É–ø –¥–æ —á–∞—Ç—É –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
chat_ref = db.reference("chat_messages")

# –õ—ñ—á–∏–ª—å–Ω–∏–∫ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –æ–Ω–ª–∞–π–Ω
if 'user_count' not in st.session_state:
    st.session_state['user_count'] = 1  # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
st.session_state['user_count'] += 1

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ —ñ–∑ —Å—Ç–∏–ª–µ–º
st.markdown("<h1 style='text-align: center; color: blue;'>üî¢ DyfCalc</h1>", unsafe_allow_html=True)
st.markdown("<h3 style='text-align: center; color: gray;'>–Ü–Ω—Ç–µ–≥—Ä—É–≤–∞–Ω–Ω—è —Ç–∞ –î–∏—Ñ–µ—Ä–µ–Ω—Ü—ñ—é–≤–∞–Ω–Ω—è –§—É–Ω–∫—Ü—ñ–π</h3>", unsafe_allow_html=True)
st.markdown("---")

# –ë–æ–∫–æ–≤–∞ –ø–∞–Ω–µ–ª—å —ñ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
with st.sidebar:
    # –õ—ñ—á–∏–ª—å–Ω–∏–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    st.header("üë• –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ")
    st.markdown(f"![–õ—é–¥–∏–Ω–∞](https://img.icons8.com/emoji/48/null/bust-in-silhouette.png) **{st.session_state['user_count']} –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á(—ñ/—ñ–≤) –æ–Ω–ª–∞–π–Ω**")
    st.markdown("---")

    # –ß–∞—Ç
    st.header("üí¨ –û–Ω–ª–∞–π–Ω-—á–∞—Ç")
    messages = chat_ref.get() or {}
    for msg in messages.values():
        st.write(msg)

    # –ü–æ–ª–µ –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    user_input = st.text_input("–ù–∞–ø–∏—à—ñ—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:", key="chat_input")
    if st.button("–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏", key="send"):
        if user_input.strip():  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø–æ—Ä–æ–∂–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è
            chat_ref.push(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {user_input}")
            user_input = ""  # –û—á–∏—â–µ–Ω–Ω—è –ø–æ–ª—è –ø—ñ—Å–ª—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è

    st.markdown("---")
    st.header("üîß –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è")
    operation = st.radio("–û–±–µ—Ä—ñ—Ç—å –æ–ø–µ—Ä–∞—Ü—ñ—é:", ["–Ü–Ω—Ç–µ–≥—Ä—É–≤–∞–Ω–Ω—è", "–î–∏—Ñ–µ—Ä–µ–Ω—Ü—ñ—é–≤–∞–Ω–Ω—è"])
    st.markdown("---")
    st.header("üé® –û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è")
    theme = st.radio("–û–±–µ—Ä—ñ—Ç—å —Ç–µ–º—É:", ["–°–≤—ñ—Ç–ª–∞", "–¢–µ–º–Ω–∞"])
    st.markdown("---")
    st.markdown(
        """
        <div style="text-align: center; color: gray;">
        –ü—Ä–æ–≥—Ä–∞–º–∞ ver 1.0 ‚Ä¢ –ó–∞–ø–∞—Ç–µ–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–æ–º Sm
        </div>
        """, unsafe_allow_html=True
    )

# –û—Å–Ω–æ–≤–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª
st.markdown(
    """
    <div style="border: 1px solid #ccc; padding: 10px; border-radius: 8px; box-shadow: 2px 2px 5px rgba(0,0,0,0.1);">
    <h4>üßÆ –í–≤–µ–¥—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è:</h4>
    </div>
    """,
    unsafe_allow_html=True
)
user_function = st.text_input("–ù–∞–ø—Ä–∏–∫–ª–∞–¥, x**2 - 4*x + y + z", placeholder="x**2 - 4*x + y + z")

# –ü–æ–±—É–¥–æ–≤–∞ –≥—Ä–∞—Ñ—ñ–∫–∞ —Ñ—É–Ω–∫—Ü—ñ—ó
if user_function:
    try:
        function = sp.sympify(user_function)

        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥—ñ–ª–µ–Ω–Ω—è –Ω–∞ –Ω—É–ª—å
        if sp.simplify(function).has(sp.zoo) or sp.simplify(function).has(sp.oo):
            raise ZeroDivisionError("–î—ñ–ª–µ–Ω–Ω—è –Ω–∞ –Ω—É–ª—å –Ω–µ –¥–æ–ø—É—Å–∫–∞—î—Ç—å—Å—è!")

        # –ü—ñ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω—å –¥–ª—è –∑–º—ñ–Ω–Ω–∏—Ö y —ñ z
        substitutions = {var: 1 for var in [y, z] if var in function.free_symbols}
        function = function.subs(substitutions)

        # –ì–µ–Ω–µ—Ä—É–≤–∞–Ω–Ω—è —á–∏—Å–ª–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö
        func_np = sp.lambdify(sp.symbols('x'), function, 'numpy')
        x_vals = np.linspace(-10, 10, 500)
        y_vals = func_np(x_vals)

        # –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞
        if st.checkbox("üìä –ü–æ–∫–∞–∑–∞—Ç–∏ –≥—Ä–∞—Ñ—ñ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó"):
            fig, ax = plt.subplots()
            ax.plot(x_vals, y_vals, label=f"f(x) = {user_function}", color="blue")
            ax.set_title("–ì—Ä–∞—Ñ—ñ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó")
            ax.legend()
            ax.grid(True)
            st.pyplot(fig)

    except ZeroDivisionError as zde:
        st.error(f"–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞: {zde}")
    except Exception as e:
        st.error(f"–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞: {e}")

# –î–æ–¥–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∏–ª—å
st.markdown(
    """
    <style>
    .stButton>button {
        background-color: #007BFF; /* –°–∏–Ω—ñ–π –∫–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ */
        color: white;
        font-size: 14px;
        padding: 6px 12px;
        border-radius: 5px;
    }
    </style>
    """,
    unsafe_allow_html=True
)
